// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "./server/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  uuid      String   @id @default(uuid()) // Primary Key
  name      String?
  email     String   @unique
  password  String?
  provider  String?  @default("credentials") // ← เพิ่มตรงนี้
  appKey    String?
  appSecret String?
  devices    Device[]
  profile   Profile?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id            Int      @id @default(autoincrement())
  owner         User?    @relation(fields: [ownerUuid], references: [uuid])
  ownerUuid     String?  @unique
  image         String? 
  fullName      String?
  lastName      String?
  mobile        String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Device {
  id            String      @id @default(uuid())
  serialNumber  String?     @unique
  macAddress    String?     @unique
 
  model         String?
  version       String?

  status        DeviceStatus?   @default(INSTOCK)

  owner         User?           @relation(fields: [ownerUuid], references: [uuid])
  ownerUuid     String?

  language      Language?       @relation(fields: [languageId], references: [code])
  languageId    Int?            @default(1) // default language ID = 1

  unit          Unit?           @relation(fields: [unitId], references: [code])
  unitId        Int?            @default(0) // default unit ID = 0

  testMode      TestMode?       @relation(fields: [testModeId], references: [code])
  testModeId    Int?            @default(1) // default test mode ID = 1


  records       TestRecord[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model TestRecord {
  id              Int      @id @default(autoincrement())
  recordNumber    Int      @unique
  alcoholValue    Float
  dateTime        DateTime
  pageId          Int?
  deviceRecId     Int?

  unit            Unit @relation(fields: [unitId], references: [id])
  unitId          Int

  device          Device @relation(fields: [deviceId], references: [id])
  deviceId        String

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Language {
  id        Int      @id @default(autoincrement())
  code      Int      @unique
  name      String
  devices   Device[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Unit {
  id        Int          @id @default(autoincrement())
  code      Int          @unique
  name      String
  devices   Device[]
  records   TestRecord[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model TestMode {
  id      Int      @id @default(autoincrement())
  code    Int      @unique
  name    String
  devices Device[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum DeviceStatus {
  INSTOCK
  ACTIVATED
  REGISTERED
}
